#define CLK_DELAY 100	//Устанавливаем задержку работы дисплея в мкс(по умолчанию 100)

#include <EndTM1637.h>
EndTM1637 disp(2, 3);	//Обозначаем пины (CLK, DIO)

void setup() {
  disp.setBright(7, 1);	//Устанавливаем яркость(0 - 7), подсветка включена(по умолчанию)
  //Вообще при создании объекта яркость 7 и подсветка включена
}

void loop() {
  disp.clear();	//Очистка дисплея
  disp.setBytes(_empty, _empty, _h, _i);	//Вывод "по байтам", первые два места пустые, вторые заняты буквами h и i(список можно найти в EndTM1637.h в папке библиотеки)
  delay(2000);	//Ждем
  disp.setBytes(_1, _2, _last, _r);	//Первые два места это цыфры 1 и 2, третье место это последний установленный в него символ(тот что горит на дисплее), четвертое место это r
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.displayInts(28);	//Вывод целого числа
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.displayInts(-28, true); // Вывод числа, второй аргумент это нули(оставшиеся пустые места занять нулями)
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.manualFloat(2.83, 2);	//Ручной вывод числа с запятой, сначало число, затем кол-во знаков после запятой
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.manualFloat(2.83, 1);	//Ручной вывод флоат, теперь с 1 знаком после запятой
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.manualFloat(-2.83, 1, true);	//Ручной вывод флоат, первый аргумент - число, второй - кол-во занков после запятой, третий - нули(как в displayInts)
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  byte rs[14] = {_r, _u, _n, _n, _i, _n, _G, _empty, _S, _t, _r, _i, _n, _G}; //Готовим строку для вывода
  disp.runningString(rs, sizeof(rs), 300);	//Вывод бегущей строки, первый аргумент - си-строка, второй - размер строки, третий - задержка между движением символов(мс), после движения строки дисплей очищается
  delay(2000);	//Ждем
  disp.displayInts(12);	//Вывод целого числа
  disp.setBytes(_U, _dot, _last, _last);	//Вывод "по байтам", первый символ U, второй это точка, третий и четвертый - без изменений(число 12)
  delay(2000);	//Ждем
  disp.dots(-1);	//Точки, значение "-1" - выключение всех точек
  delay(2000);	//Ждем
  disp.dots(0);	//Точки, первый аргумент - номер символа, второй - состояние(0 или 1), по умолчанию точка включается
  delay(2000);	//Ждем
  disp.dots(1);	//Точки, включаем точку в символе 1
  delay(2000);	//Ждем
  disp.dots(2);	//Точки, включаем точку в символе 2
  delay(2000);	//Ждем
  disp.dots(3);	//Точки, включаем точку в символе 3
  delay(2000);	//Ждем
  disp.dots(0, 0);	//Точки, выключаем точку в символе 0
  delay(2000);	//Ждем
  disp.dots(1, 0);	//Точки, выключаем точку в символе 1
  delay(2000);	//Ждем
  disp.dots(2, 0);	//Точки, выключаем точку в символе 2
  delay(2000);	//Ждем
  disp.dots(3, 0);	//Точки, выключаем точку в символе 3
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  byte str1[2] = {_S, _U};	//Подготовка массива для вывода(2 символа)
  disp.setArray(str1, sizeof(str1));	//Вывод массива, первый аргумент - массив, второй - размер массива, третий - расположение массива(по умолчанию - слева, _LEFT)
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.setArray(str1, sizeof(str1), _RIGHT); // Вывод массива, теперь расположение - справа
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.setArray(str1, sizeof(str1), _MIDDLE);	// Вывод массива, теперь расположение - центр
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  byte str2[3] = {_S, _U, _r};	//Подготовка массива(3 символа)
  disp.setArray(str2, sizeof(str2)); //Вывод массива, по умолчанию - слева, для 2 символов доступно три расположеия(слева, справа, центр), для 3 символов доступно 2 положения - слева и справа
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  disp.setArray(str2, sizeof(str2), _RIGHT);	// Вывод массива, теперь расположение - справа
  delay(2000);	//Ждем
  disp.clear();	//Очистка
  byte str3[4] = {_S, _U, _r, _E};	//Подготовка массива, 4 символа
  disp.setArray(str3, sizeof(str3));	//Вывод массива, для 4 символов доступно одно положение и оно не зависит от третьего аргумента
  delay(2000);	//Ждем
  disp.setByte(_C, 0);	//Вывод символа, первый аргумент - символ, второй - расположение(номер символа)
  delay(2000);	//Ждем
  disp.setByte(_A, 3);	//Вывод символа, теперь буква A, в символе 3(крайнем правом)
  delay(2000);	//Ждем
}
